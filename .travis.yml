language: csharp  
solution: ExampleTDTB.sln
sudo: required  
os: linux
dist: trusty  
mono: none
dotnet: 2.1
services:
    - docker

env:
    global:
# https://docs.microsoft.com/ru-ru/dotnet/core/rid-catalog
        DOTNETRUNTIME: ubuntu-x64
#    DOCKER_USER: 
#    DOCKER_PASS:
#    BUILD_VER
      
      
before_install:
  
      
install:
    - npm install -g bower
    - npm install -g gulp
    - sudo apt-get install graphviz
#    - sudo apt-get install -y mono-devel libgit2-24
    - export PATH=`echo $PATH | sed -e 's/:\/home\/travis\/\.local\/bin//'` || true
   


script:
    - dotnet --info
    - docker version
    
#    - dotnet remove build package GitVersion.CommandLine
    
    - dotnet restore --runtime $DOTNETRUNTIME
    - dotnet build    
#    - ./build.sh Debug
#    - ./build.sh AllCustom
#    - ./build.sh compile
    
    - echo TRAVIS_BUILD_ID $TRAVIS_BUILD_ID    
    - echo TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_NUMBER    
    - echo BUILD_VER $BUILD_VER    
    - echo docker image ver = $BUILD_VER.$TRAVIS_BUILD_NUMBER    
    - echo DOCKER_USER $DOCKER_USER
    - echo DOTNETRUNTIME $DOTNETRUNTIME
    
    - if [ "$TRAVIS_BRANCH" == "master" ] ; then 
      dotnet publish -c Release -f netcoreapp2.1 --runtime $DOTNETRUNTIME ;
      
      cp -r ./src/Web/bin/Release/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-web ;
      docker build -t tdtb-web -f docker/Dockerfile-Web . ;
      
      cp -r ./src/AccountService/bin/Release/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-acc ;
      docker build -t tdtb-acc -f docker/Dockerfile-AccountService . ;
      
      cp -r ./src/ToDoService/bin/Release/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-todo ;
      docker build -t tdtb-todo -f docker/Dockerfile-ToDoService . ;
      
      cp -r ./src/ToBuyService/bin/Release/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-tobuy ;
      docker build -t tdtb-tobuy -f docker/Dockerfile-ToBuyService . ;
      
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;
      docker tag tdtb-web roured/tdtb-web:1.1 ;
      docker tag tdtb-acc roured/tdtb-acc:1.1 ;
      docker tag tdtb-todo  roured/tdtb-todo:1.1 ;
      docker tag tdtb-tobuy roured/tdtb-tobuy:1.1 ;
      docker tag tdtb-web roured/tdtb-web:latest ;
      docker tag tdtb-acc roured/tdtb-acc:latest ;
      docker tag tdtb-todo  roured/tdtb-todo:latest ;
      docker tag tdtb-tobuy roured/tdtb-tobuy:latest ;
      docker push roured/tdtb-acc:1.1 ;
      docker push roured/tdtb-web:1.1 ;
      docker push roured/tdtb-tobuy:1.1 ;
      docker push roured/tdtb-todo:1.1 ;
      docker push roured/tdtb-web:latest ;
      docker push roured/tdtb-acc:latest ;
      docker push roured/tdtb-tobuy:latest ;
      docker push roured/tdtb-todo:latest ;
      docker logout ;      
      fi
      
    - if [ "$TRAVIS_BRANCH" == "dev" ] ; then 
      dotnet publish -c Debug -f netcoreapp2.1 --runtime $DOTNETRUNTIME ;
     
      cp -r ./src/Web/bin/Debug/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-web ;
      docker build -t tdtb-web -f docker/Dockerfile-Web . ;
      
      cp -r ./src/AccountService/bin/Debug/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-acc ;
      docker build -t tdtb-acc -f docker/Dockerfile-AccountService . ;
      
      cp -r ./src/ToDoService/bin/Debug/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-todo ;
      docker build -t tdtb-todo -f docker/Dockerfile-ToDoService . ;
      
      cp -r ./src/ToBuyService/bin/Debug/netcoreapp2.1/$DOTNETRUNTIME/publish ./pub-tobuy ;
      docker build -t tdtb-tobuy -f docker/Dockerfile-ToBuyService . ;
      
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;
      docker tag tdtb-web roured/tdtb-web:1.1 ;
      docker tag tdtb-acc roured/tdtb-acc:1.1 ;
      docker tag tdtb-todo roured/tdtb-todo:1.1 ;
      docker tag tdtb-tobuy roured/tdtb-tobuy:1.1 ;
      docker tag tdtb-web roured/tdtb-web:dev ;
      docker tag tdtb-acc roured/tdtb-acc:dev ;
      docker tag tdtb-tobuy roured/tdtb-tobuy:dev ;
      docker tag tdtb-todo roured/tdtb-todo:dev ;
      docker push roured/tdtb-acc:1.1 ;
      docker push roured/tdtb-web:1.1 ;
      docker push roured/tdtb-todo:1.1 ;
      docker push roured/tdtb-tobuy:1.1 ;
      docker push roured/tdtb-web:dev ;
      docker push roured/tdtb-acc:dev ;      
      docker push roured/tdtb-todo:dev ;      
      docker push roured/tdtb-tobuy:dev ;      
      docker logout ;       
      fi
    

after_success: 

    - if [ "$TRAVIS_BRANCH" == "master" ] ; then 

      /* Push to docker repo */

      fi 