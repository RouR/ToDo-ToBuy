language: csharp  
solution: ExampleTDTB.sln
sudo: required  
os: linux
dist: trusty  
mono: none
dotnet: 2.0.2
services:
    - docker

env:
# https://docs.microsoft.com/ru-ru/dotnet/core/rid-catalog
    DOTNETRUNTIME: ubuntu-x64
#    DOCKER_USER: 
#    DOCKER_PASS:
#    BUILD_VER
      
    
install:
    - npm install -g bower
    - npm install -g gulp


   


script:
    - dotnet --info
    - docker version
    
    
    - dotnet restore --runtime $DOTNETRUNTIME
    - dotnet build    
    
    - echo TRAVIS_BUILD_ID $TRAVIS_BUILD_ID    
    - echo TRAVIS_BUILD_NUMBER $TRAVIS_BUILD_NUMBER    
    - echo BUILD_VER $BUILD_VER    
    - echo docker image ver = $BUILD_VER.$TRAVIS_BUILD_NUMBER    
    - echo DOCKER_USER $DOCKER_USER
    - echo DOTNETRUNTIME $DOTNETRUNTIME
    
    - if [ "$TRAVIS_BRANCH" == "master" ] ; then 
      dotnet publish -c Release --runtime $DOTNETRUNTIME ;
      
      
      cp -r ./src/Web/bin/Release/netcoreapp2.0/publish ./pub-web ;
      docker build -t tdtb-web -f docker/Dockerfile-Web-2 . ;
      
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;
      docker tag tdtb-web roured/tdtb-web:$BUILD_VER.$TRAVIS_BUILD_NUMBER ;
      docker tag tdtb-web roured/tdtb-web:latest ;
      docker push roured/tdtb-web:$BUILD_VER.$TRAVIS_BUILD_NUMBER ;
      docker push roured/tdtb-web:latest ;
      docker logout ;      
      fi
      
    - if [ "$TRAVIS_BRANCH" == "dev" ] ; then 
      dotnet publish -c Debug --runtime $DOTNETRUNTIME ;
     
      
      cp -r ./src/Web/bin/Debug/netcoreapp2.0/publish ./pub-web ;
      
      docker build -t tdtb-web -f docker/Dockerfile-Web-2 . ;      
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;      
      docker tag tdtb-web roured/tdtb-web:staging ;      
      docker push roured/tdtb-web:staging ;
      docker logout ;      
      fi
    

after_success: 

    - if [ "$TRAVIS_BRANCH" == "master" ] ; then 

      /* Push to docker repo */

      fi 