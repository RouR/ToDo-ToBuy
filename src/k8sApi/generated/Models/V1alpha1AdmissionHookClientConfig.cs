// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AdmissionHookClientConfig contains the information to make a TLS
    /// connection with the webhook
    /// </summary>
    public partial class V1alpha1AdmissionHookClientConfig
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1AdmissionHookClientConfig
        /// class.
        /// </summary>
        public V1alpha1AdmissionHookClientConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1AdmissionHookClientConfig
        /// class.
        /// </summary>
        /// <param name="caBundle">CABundle is a PEM encoded CA bundle which
        /// will be used to validate webhook's server certificate.
        /// Required</param>
        /// <param name="service">Service is a reference to the service for
        /// this webhook. If there is only one port open for the service, that
        /// port will be used. If there are multiple ports open, port 443 will
        /// be used if it is open, otherwise it is an error. Required</param>
        public V1alpha1AdmissionHookClientConfig(byte[] caBundle, V1alpha1ServiceReference service)
        {
            CaBundle = caBundle;
            Service = service;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets cABundle is a PEM encoded CA bundle which will be used
        /// to validate webhook's server certificate. Required
        /// </summary>
        [JsonProperty(PropertyName = "caBundle")]
        public byte[] CaBundle { get; set; }

        /// <summary>
        /// Gets or sets service is a reference to the service for this
        /// webhook. If there is only one port open for the service, that port
        /// will be used. If there are multiple ports open, port 443 will be
        /// used if it is open, otherwise it is an error. Required
        /// </summary>
        [JsonProperty(PropertyName = "service")]
        public V1alpha1ServiceReference Service { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CaBundle == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CaBundle");
            }
            if (Service == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Service");
            }
            if (Service != null)
            {
                Service.Validate();
            }
        }
    }
}
