#metrics http://192.168.99.100:18080/nginx_status


---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: web-node  
spec:
  selector:
    app: web
  externalIPs:
  - 192.168.99.100  
  type: NodePort
  ports:
  - name: web
    port: 80
    targetPort: 5555
    protocol: TCP     
---

---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: account-service-public
spec:
  selector:
    app: account-service
  externalIPs:
  - 192.168.99.100  
  type: NodePort
  ports:
  - name: web
    port: 12801
    targetPort: 5555
    protocol: TCP     
---
---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: web-todo-public
spec:
  selector:
    app: todo-service
  externalIPs:
  - 192.168.99.100  
  type: NodePort
  ports:
  - name: web
    port: 12802
    targetPort: 5555
    protocol: TCP     
---

kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: jagger-node
spec:
  selector:
    jaeger-infra: query-pod
  externalIPs:
  - 192.168.99.100  
  type: NodePort
  ports:
  - name: jj
    port: 81
    targetPort: 80
    protocol: TCP     
---

# kind: Service
# apiVersion: v1
# metadata:
  # namespace: istio-system
  # name: istio-ingressgateway
# spec:
  # selector:
    # app: grafana
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: http
    # port: 13081
    # targetPort: 3000    
# ---
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: istio-system
  # name: istio-ingressgateway2
# spec:
  # selector:
    # app: istio-egressgateway
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: http
    # port: 13082
    # targetPort: 15090    
# ---

---
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: ingress-nginx
  # name: nginx-ingress-prometheus-discovery
  # labels:
    # k8s-app: ingress
# spec:
  # selector:
    # app: ingress-nginx
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: metrics
    # port: 18080
    # protocol: TCP       
# ---

  
# ---
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: kube-system
  # name: grafana-node
  # labels:
    # k8s-app: grafana
# spec:
  # selector:
    # k8s-app: grafana
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: gr
    # port: 8100
    # targetPort: 3000
    # protocol: TCP     
# ---

#open tabix http://192.168.99.100:8150
#connect to clickhouse:
#logs
#http://192.168.99.100:8123
#default
#password
# ---
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: kube-system
  # name: logs-node  
# spec:
  # selector:
    # component: clickhouse
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: http
    # port: 8123
    # targetPort: 8123
    # protocol: TCP  
# ---
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: kube-system
  # name: logs-dashboard-node  
# spec:
  # selector:
    # component: tabix
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: http
    # port: 8150
    # targetPort: 80
    # protocol: TCP   
# ---

---
# admin PASSWORD
# kind: Service
# apiVersion: v1
# metadata:
  # namespace: kube-system
  # name: loghouse-public
  # labels:
    # component: loghouse
# spec:
  # selector:
    # component: loghouse
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: httpng
    # port: 8200
    # targetPort: 80
    # protocol: TCP     
# ---




# kind: Service
# apiVersion: v1
# metadata:
  # namespace: kube-system
  # name: infux-node  
# spec:
  # selector:
    # k8s-app: influxdb
  # externalIPs:
  # - 192.168.99.100  
  # type: NodePort
  # ports:
  # - name: http
    # port: 8083
    # targetPort: 8086
    # protocol: TCP   
# ---




