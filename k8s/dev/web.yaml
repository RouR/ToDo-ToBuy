apiVersion: apps/v1beta2 # apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: web-deployment
  namespace: dev
  labels:
    app: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  
  minReadySeconds: 5
  
  template:
    metadata:
      namespace: dev
      labels:
        app: web
        ci: somedataForOverride
    spec:
      containers:
      - name: web
        image: roured/tdtb-web:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 5555
        readinessProbe:
          httpGet:
            path: /hc
            port: 5555
        livenessProbe:
          httpGet:
            path: /hc
            port: 5555
          initialDelaySeconds: 10
          timeoutSeconds: 1
        
        
        
        
---

kind: Service
apiVersion: v1
metadata:
  name: web-service
  namespace: dev
spec:
  selector:
    app: web
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5555
  - name: https
    protocol: TCP
    port: 443
    targetPort: 5556   
    
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  namespace: dev
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - backend:
          # This assumes http-svc exists and routes to healthy endpoints.
          serviceName: web-service
          servicePort: 80
    
---   


#https://medium.com/@gokulc/setting-up-nginx-ingress-on-kubernetes-2b733d8d2f45

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: nginx-ingress-controller
  namespace: dev
spec: 
  replicas: 1
  revisionHistoryLimit: 3
  template: 
    metadata: 
      labels: 
        k8s-app: nginx-ingress-lb
    spec: 
      containers: 
        - args: 
            - /nginx-ingress-controller
            - "--default-backend-service=$(POD_NAMESPACE)/web-service"
#            - "--default-ssl-certificate=$(POD_NAMESPACE)/tls-certificate"
          env: 
            - name: POD_NAME
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              value: dev                
          image: "gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.5"
          imagePullPolicy: Always
          livenessProbe: 
            httpGet: 
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
          name: nginx-ingress-controller
          ports: 
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
          volumeMounts: 
            - mountPath: /etc/nginx-ssl/dhparam
              name: tls-dhparam-vol
      terminationGracePeriodSeconds: 60
      volumes: 
        - name: tls-dhparam-vol
          secret: 
            secretName: tls-dhparam
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: dev
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    k8s-app: nginx-ingress-lb