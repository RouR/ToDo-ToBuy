#The default user name and password is 'admin'. Once you login to Grafana, add a datasource that is InfluxDB. The URL for InfluxDB will be http://INFLUXDB_HOST:INFLUXDB_PORT. 
#http://monitoring-influxdb.kube-system.svc:8086 Database name is 'k8s'. Default user name and password is 'root'.
# OR see Database name in heapster.yaml

#https://github.com/kubernetes/heapster/blob/master/docs/influxdb.md
#kubectl get services --namespace=kube-system monitoring-grafana monitoring-influxdb
#kubectl --namespace="kube-system" exec -ti monitoring-grafana-847bc75564-nsmpz -- grafana-cli plugins install raintank-kubernetes-app
#http://docs.grafana.org/installation/docker/  
#minikube addons enable default-storageclass
#https://grafana.com/dashboards/3646
#https://grafana.com/dashboards/3649

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: monitoring-grafana
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: grafana
    spec:
      containers:
      - name: grafana
        image: monitoringartist/grafana-xxl:latest
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certificates
          readOnly: true
        - mountPath: /var/lib/grafana
          name: grafana-storage
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: GF_SERVER_HTTP_PORT
          value: "3000"
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          # If you're only using the API Server proxy, set this value instead:
          # value: /api/v1/namespaces/kube-system/services/monitoring-grafana/proxy
          value: /
        #- name: GF_INSTALL_PLUGINS
        #  value: raintank-kubernetes-app
      volumes:
      - name: ca-certificates
        hostPath:
          path: /etc/ssl/certs
#      - name: grafana-volume
#        emptyDir: {}
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
    # If you are NOT using this as an addon, you should comment out this line.
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-grafana
  name: monitoring-grafana
  namespace: kube-system
spec:
  selector:
    k8s-app: grafana
  # In a production setup, we recommend accessing Grafana through an external Loadbalancer
  # or through a public IP.
  # type: LoadBalancer
  # You could also use NodePort to expose the service at a randomly-generated port
  type: NodePort
  ports:
  - name: someport
    port: 8011
    targetPort: 3000
    protocol: TCP
---  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-volume-claim
  namespace: kube-system
  labels:
    task: monitoring
    k8s-app: grafana
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---      
