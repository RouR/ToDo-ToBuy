# add to hosts-file
# 207.244.95.62 rour.test
# 207.244.95.63 rour.test
# 207.244.95.64 rour.test
# 207.244.95.62 tdtb.rour.test
# 207.244.95.63 tdtb.rour.test
# 207.244.95.64 tdtb.rour.test
# 207.244.95.62 grafana.rour.test
# 207.244.95.62 logs.rour.test
# 207.244.95.63 logs.rour.test
# 207.244.95.64 logs.rour.test
# 207.244.95.62 trace.rour.test
# 207.244.95.63 trace.rour.test
# 207.244.95.64 trace.rour.test


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
#  namespace: kube-system
  namespace: dev
#  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  spec:
  rules:
  - host: tdtb.rour.test
    http:
      paths:
      - path: /
        backend:
          serviceName: web-service
          servicePort: 80  
  - host: trace.rour.test
    http:
      paths:
      - path: /
        backend:
          serviceName: jaeger-query
          servicePort: 80  
  - host: logs.rour.test
    http:
      paths:
      - path: /
        backend:
          serviceName: loghouse-public
          servicePort: 80           
        
---   
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-system-ingress
  namespace: kube-system
#  namespace: dev
#  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/configuration-snippet: |
      if ($host = "grafana.rour.test") {
        return 301 http://grafana.rour.test:3000/$request_uri;
      }
spec:
  spec:
  rules:  
  - host: grafana.rour.test
    http:
      paths:
      - path: /
        backend:
          serviceName: external-grafana
          servicePort: 3000

           
---
# apiVersion: v1
# kind: Service
# metadata:
  # namespace: dev
  # name: cassandra-service
  # labels:
    # run: cassandra
# spec:
  # type: NodePort
  # ports:
  # - port: 9042
    # protocol: TCP
  # selector:
    # app: cassandra 